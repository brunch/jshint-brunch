// Generated by CoffeeScript 1.6.2
var JSHintLinter, clone, formatError, jshint;

jshint = require('jshint').JSHINT;

formatError = function(error) {
  var evidence;

  evidence = (error.evidence ? "\n\n" + error.evidence + "\n" : '\n');
  return "" + error.reason + " " + (error.id || '') + " at line " + error.line + ", column " + error.character;
};

clone = function(obj) {
  var copied, key, val;

  if ((obj == null) || typeof obj !== 'object') {
    return obj;
  }
  copied = new obj.constructor();
  for (key in obj) {
    val = obj[key];
    copied[key] = clone(val);
  }
  return copied;
};

module.exports = JSHintLinter = (function() {
  JSHintLinter.prototype.brunchPlugin = true;

  JSHintLinter.prototype.type = 'javascript';

  JSHintLinter.prototype.extension = 'js';

  function JSHintLinter(config) {
    var cfg, _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6;

    this.config = config;
    cfg = clone((_ref = (_ref1 = (_ref2 = this.config) != null ? (_ref3 = _ref2.plugins) != null ? _ref3.jshint : void 0 : void 0) != null ? _ref1 : (_ref4 = this.config) != null ? _ref4.jshint : void 0) != null ? _ref : {});
    if ((_ref5 = this.config) != null ? _ref5.jshint : void 0) {
      console.warn("Warning: config.jshint is deprecated, move it to config.plugins.jshint");
    }
    this.options = cfg.options;
    this.globals = cfg.globals;
    this.pattern = (_ref6 = cfg.pattern) != null ? _ref6 : RegExp("^" + this.config.paths.app + ".*\\.js$");
  }

  JSHintLinter.prototype.lint = function(data, path, callback) {
    var error, success;

    success = jshint(data, this.options, this.globals);
    if (success) {
      return callback();
    } else {
      error = jshint.errors.filter(function(error) {
        return error != null;
      }).map(formatError).join('\n');
      return callback(error);
    }
  };

  return JSHintLinter;

})();
